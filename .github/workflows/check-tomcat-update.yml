# This is a basic workflow to help you get started with Actions

name: Check Tomcat update

# Controls when the action will run.
on:
  workflow_dispatch:
  
  schedule:
    - cron: 0 16 * * *

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update-tomcat:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_PAT }}

      # Runs a set of commands using the runners shell
      - name: Check Latest Tomcat 9 version
        env: 
          majorVersion: 9
          # SHA512 of this file: https://downloads.apache.org/tomcat/tomcat-9/KEYS
          GPG_KEY_FILE_SHA512: f333a7bc1a1ef6762f0b9193d1e3e669d7628ee1613b884200b4e9a091eb813c8c4eb9491f13580c14df1a1ecba94b2a1c0b98ed35a7302c6fb800390906a19f
        
        run: |
          possibleVersion="$(
            curl -fsSL --compressed "https://www-us.apache.org/dist/tomcat/tomcat-$majorVersion/" \
              | grep '<a href="v' \
              | sed -r 's!.*<a href="v([^"/]+)/?".*!\1!' \
              | sort -rV \
              | head -1
          )"
          fullVersion=
          sha512=
          if possibleSha512="$(
            curl -fsSL "https://www-us.apache.org/dist/tomcat/tomcat-$majorVersion/v$possibleVersion/bin/apache-tomcat-$possibleVersion.tar.gz.sha512" \
              | cut -d' ' -f1
          )" && [ -n "$possibleSha512" ]; then
            fullVersion="$possibleVersion"
            sha512="$possibleSha512"
          fi
          if [ -z "$fullVersion" ]; then
            echo >&2 "error: failed to find latest release for $version"
            exit 1
          fi
          echo "Newest Tomcat $majorVersion version is: $fullVersion (SHA512:$sha512)"
          perl -i -0pe 's/^(ENV) TOMCAT_MAJOR[^#]+/\1 TOMCAT_MAJOR='"$majorVersion"' \\\n    TOMCAT_VERSION='"$fullVersion"' \\\n    TOMCAT_SHA512='"$sha512"' \\\n    GPG_KEY_FILE_SHA512='"$GPG_KEY_FILE_SHA512"' \\\n    /gm' docker/alpine/Dockerfile
          mv docker/alpine/Dockerfile.modified docker/alpine/Dockerfile
          echo "${{ secrets.BOT_PGP_KEY }}" | gpg --import --batch --always-trust
          echo "${{ secrets.BOT_PGP_FINGER }}:6:" | gpg --import-ownertrust
          echo | gpg --clearsign --pinentry-mode loopback --passphrase '${{ secrets.BOT_PGP_PASS }}' > /dev/null
          git config user.name superjeng1-bot
          git config user.email 71003564+superjeng1-bot@users.noreply.github.com
          git config user.signingkey ${{ secrets.BOT_PGP_KEY_ID }}
          git add -u
          git diff-index --quiet HEAD && echo "No update available for now. Exiting..." || { git commit -S -m "Updated Tomcat $majorVersion Version to $fullVersion"; git push; }
